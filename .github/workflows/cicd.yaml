name: CI/CD to Docker Hub and ArgoCD

on:
  push:
    branches:
    - main

jobs:
  ci:
    name: Build Docker Image and Push
    runs-on: ubuntu-latest
    if: "!contains(join(github.event.head_commit.modified, ','), '.github/workflows/')" # âœ… Skip CI if only workflows are modified
    outputs:
      image_tag: ${{ steps.set-tag.outputs.tag }}

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set image tag
      id: set-tag
      run: echo "tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

    - name: Build and push backend image
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/flux-backend:${{ steps.set-tag.outputs.tag }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v6
      with:
        context: ./frontend/myapp
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/flux-frontend:${{ steps.set-tag.outputs.tag }}

  cd:
    name: Deploy Application using ArgoCD
    needs: ci
    runs-on: self-hosted
    steps:
    - name: Checkout the Repo
      uses: actions/checkout@v3

    - name: Update image tag in values.yaml
      run: |
        pip install yq
        python -c "
        import yaml
        with open('myapp/values.yaml', 'r') as f:
            values = yaml.safe_load(f)
        values['backend']['tag'] = '${{ needs.ci.outputs.image_tag }}'
        values['frontend']['tag'] = '${{ needs.ci.outputs.image_tag }}'
        with open('myapp/values.yaml', 'w') as f:
            yaml.dump(values, f)
        "

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        author_name: mUsman2003
        author_email: mUsman2003@users.noreply.github.com
        message: 'Update image tag to ${{ needs.ci.outputs.image_tag }}'
        add: 'charts/python-app/values.yaml'
        push: true
        github_token: ${{ secrets.PAT }}

    - name: Argocd app sync
      shell: cmd
      run: |
        .\argocd login localhost:8080 --insecure --grpc-web --username admin --password %ARGOCD_PASSWORD%
        .\argocd app sync flux
      env:
        ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
