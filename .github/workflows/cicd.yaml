name: CI/CD to Docker Hub and ArgoCD

on:
  push:
    branches:
    - main

jobs:
  ci:
    name: Build Docker Image and Push
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.tag }}

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set image tag
      id: set-tag
      run: echo "tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

    - name: Build and push backend image
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/flux-backend:${{ steps.set-tag.outputs.tag }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v6
      with:
        context: ./frontend/myapp
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/flux-frontend:${{ steps.set-tag.outputs.tag }}

  cd:
    name: Deploy Application using ArgoCD
    needs: build-and-deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the Repo
      uses: actions/checkout@v3

    - name: Update image tag in values.yaml
      run: |
        pip install yq
        yq -i '.image.tag = "${{ needs.build-and-deploy.outputs.image_tag }}"' myapp/values.yaml

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        message: 'Update image tag to ${{ needs.build-and-deploy.outputs.image_tag }}'
        add: 'charts/python-app/values.yaml'

    - name: Install ArgoCD CLI
      run: |
        curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x argocd
        sudo mv argocd /usr/local/bin/argocd

    - name: Sync ArgoCD App
      run: |
        argocd login my-argocd-server.argocd \
          --insecure \
          --grpc-web \
          --username admin \
          --password "${{ secrets.ARGOCD_PASSWORD }}"

        argocd app sync python-app
